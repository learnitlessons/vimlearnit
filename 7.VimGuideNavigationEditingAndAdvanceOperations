# Comprehensive Vim Guide: Navigation, Editing, and Advanced Operations


## Understanding Modes


1. Normal Mode: The default mode for navigation and entering commands

2. Insert Mode: For inserting text

   - Press `i` to enter

   - Press `ESC` to exit and return to Normal Mode


## Basic Cursor Movements


- `h`: Move left

- `j`: Move down

- `k`: Move up

- `l`: Move right


## Using Numeric Multipliers


- `5j`: Move 5 lines down

- `5k`: Move 5 lines up

- You can use numeric multipliers with many Vim commands


## Word and Paragraph Navigation


- `w`: Move forward one word

- `b`: Move backward one word

- `}`: Move to the beginning of the next paragraph

- `{`: Move to the beginning of the previous paragraph

- `Shift+H`: Move to the top of the window (High)

- `Shift+M`: Move to the middle of the window (Middle)

- `Shift+L`: Move to the bottom of the window (Low)

- `0`: Move to the beginning of the line

- `$`: Move to the end of the line

- `gg`: Move to the beginning of the file

- `G`: Move to the end of the file


## Searching for Text


- `/word`: Search forward for "word"

- `?word`: Search backward for "word"

- `n`: Go to the next occurrence

- `N`: Go to the previous occurrence

- `:nohlsearch` or `:noh`: Remove highlighting from the current search


## Exiting Vim


- `:wq`: Save and exit

- `:w`: Save

- `:q`: Exit (if no changes)

- `:q!`: Exit without saving (force quit)


## Basic Editing in Vim


- `dw`: Delete current word

- `D`: Delete from the cursor position to the end of the current line

- `dd`: Delete entire line

- `dG`: Delete all lines from the cursor to the end of the file

- `O`: Insert text on the previous line

- `o`: Insert text on the next line

- `a`: Append text after the current cursor position

- `A`: Append text at the end of the line

- `I`: Insert text at the beginning of the line

- `u`: Undo the last change

- `Ctrl+r`: Redo the last change


## Advanced Editing and Navigation


### Copying (Yanking) and Pasting


- `yw`: Yank (copy) word

- `yy` or `Y`: Yank entire line

- `p`: Paste after cursor

- `P`: Paste before cursor

- `2yy`: Yank two lines

- `"ayy`: Yank line into register 'a'

- `"ap`: Paste from register 'a'


### Changing Text


- `cw`: Change word (delete word and enter insert mode)

- `cc`: Change entire line

- `C`: Change from cursor to end of line


### Inserting Text


- `i`: Insert before cursor

- `a`: Insert after cursor

- `o`: Open new line below and insert

- `O`: Open new line above and insert


### Advanced Movement


- `e`: Move to end of word

- `^`: Move to first non-blank character of line

- `)`: Move to next sentence

- `(`: Move to previous sentence


## Search and Replace


- `:%s/old/new/g`: Replace all occurrences of 'old' with 'new' in the entire file

- `:s/old/new/g`: Replace all occurrences of 'old' with 'new' in the current line

- `:%s/old/new/gc`: Replace all occurrences with confirmation

- `:1,5s/old/new/g`: Replace all occurrences in lines 1-5


## Working with Multiple Files


- `:e filename`: Edit a file in a new buffer

- `:bnext` or `:bn`: Go to the next buffer

- `:bprev` or `:bp`: Go to the previous buffer

- `:bd`: Delete a buffer (close a file)

- `:vs filename`: Open a file in a vertical split

- `:sp filename`: Open a file in a horizontal split


## Macros


- `qa`: Start recording a macro into register 'a'

- `q`: Stop recording macro

- `@a`: Execute the macro stored in register 'a'

- `5@a`: Execute the macro 5 times


## Additional Tips


- `.`: Repeat the last change

- `>`: Indent line

- `<`: Unindent line

- `=`: Auto-indent

- `~`: Switch case of character under cursor

- `J`: Join lines

- `Ctrl+g`: Show file status

- `:!command`: Execute an external command


